/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cvc_Configuration */

#ifndef _Included_cvc_Configuration
#define _Included_cvc_Configuration
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cvc_Configuration
 * Method:    getName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_getName
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isDebugBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isDebugBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isStatisticsBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isStatisticsBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isTracingBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isTracingBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isDumpingBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isDumpingBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isMuzzledBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isMuzzledBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isAssertionBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isAssertionBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isProofBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isProofBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isCoverageBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isCoverageBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isProfilingBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isProfilingBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isAsanBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isAsanBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isUbsanBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isUbsanBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isTsanBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isTsanBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isCompetitionBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isCompetitionBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isStaticBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isStaticBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getPackageName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_getPackageName
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getVersionString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_getVersionString
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getVersionMajor
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cvc_Configuration_getVersionMajor
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getVersionMinor
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cvc_Configuration_getVersionMinor
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getVersionRelease
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cvc_Configuration_getVersionRelease
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getVersionExtra
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_getVersionExtra
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    copyright
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_copyright
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    about
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_about
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    licenseIsGpl
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_licenseIsGpl
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithGmp
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithGmp
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithCln
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithCln
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithGlpk
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithGlpk
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithAbc
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithAbc
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithCadical
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithCadical
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithCryptominisat
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithCryptominisat
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithKissat
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithKissat
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithDrat2Er
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithDrat2Er
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithEditline
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithEditline
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithLfsc
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithLfsc
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithPoly
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithPoly
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isBuiltWithSymFPU
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isBuiltWithSymFPU
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getNumDebugTags
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cvc_Configuration_getNumDebugTags
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getDebugTags
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_cvc_Configuration_getDebugTags
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isDebugTag
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isDebugTag
  (JNIEnv *, jclass, jstring);

/*
 * Class:     cvc_Configuration
 * Method:    getNumTraceTags
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cvc_Configuration_getNumTraceTags
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getTraceTags
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_cvc_Configuration_getTraceTags
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    isTraceTag
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isTraceTag
  (JNIEnv *, jclass, jstring);

/*
 * Class:     cvc_Configuration
 * Method:    isGitBuild
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_isGitBuild
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getGitBranchName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_getGitBranchName
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getGitCommit
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_getGitCommit
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    hasGitModifications
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_cvc_Configuration_hasGitModifications
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getGitId
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_getGitId
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getCompiler
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_getCompiler
  (JNIEnv *, jclass);

/*
 * Class:     cvc_Configuration
 * Method:    getCompiledDateTime
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc_Configuration_getCompiledDateTime
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
